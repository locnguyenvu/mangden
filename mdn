#!/usr/bin/env bash
REPOSITORY_NAME="github.com/locnguyenvu/mangden"
ENVFILE=${ENVFILE:=.env}

function dev-init() {
    docker build -t "${REPOSITORY_NAME}:local" -f Dockerfile.local .
}

function http-server() {
    sourcePath="/go/src/${REPOSITORY_NAME}"
    
    declare -a dockercommand
    dockercommand=( 
        "docker" "run" "-it" "--rm"
        "-w ${sourcePath}"
        "-v ${PWD}:${sourcePath}"
    )

    while getopts "d" opti; do
        case "${opti}" in 
            d)
                dockercommand+=( "-p 2345:2345" )
                ;;
            *)
                ;;
        esac
    done

    for env in $(read-env-file);
    do
        dockercommand+=( "-e ${env}" )
        ename=$(cut -d= -f1 <<< $env)
        evalue=${env#*=}
        if [ "${ename}" = "ADDR" ]; then
            port=${evalue#*:}
            dockercommand+=( "-p ${port}:${port}" )
        fi
    done

    dockercommand+=( "${REPOSITORY_NAME}:local" "-c ${sourcePath}/http-server.air.toml" "-d")
    eval "${dockercommand[@]}"
}

function generate-protobuf() {
    filePath=$1
    protoc --proto_path=proto --go_out=proto --go_opt=paths=source_relative $filePath
}

function read-env-file() {
    declare -a envVar
    envVar=()
    while read line;
    do
        if [[ ! $line =~ ^[A-Z0-9_]+= ]]; then
            continue
        fi
        ename=$(cut -d= -f1 <<< $line)
        if [ -v "${ename}" ]; then
            envVar+=( "${ename}=${!ename}" )
        else 
            envVar+=( $line )
        fi
    done < ${ENVFILE}
    echo "${envVar[@]}"
}

function cli() {
    envVar=$(read-env-file)
    eval "${envVar} go run cmd/cli/*.go $@"
}

command=$1
if [ ! -f "${ENVFILE}" ]; then
    echo "Environment file (.env) not found!"
    exit
fi
shift
if [ -n "$(LC_ALL=C type -t ${command})" ] && [ "$(LC_ALL=C type -t ${command})" = function ]; then 
    eval "${command} $@"
else 
    echo Command not support
fi
